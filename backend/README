ü©∫ iData Backend
üîê Seguran√ßa em primeiro lugar com autentica√ß√£o 2FA
O iData Backend √© uma API RESTful desenvolvida com Spring Boot para gerenciamento seguro de dados cl√≠nicos e pessoais. Conta com suporte a autentica√ß√£o em dois fatores (2FA), gerenciamento de exames cl√≠nicos, utiliza Java 17, MongoDB como banco NoSQL, MapStruct para mapeamento de DTOs e √© containerizada com Docker para execu√ß√£o consistente e port√°til.
‚öôÔ∏è Funcionalidades
Cadastro de Usu√°rios

üë§ Pessoal: Dados pessoais e endere√ßo
ü©∫ Profissional: Inclui valida√ß√£o de licen√ßa profissional (ex.: CRM)
üîê Autentica√ß√£o 2FA: C√≥digo enviado por e-mail para login seguro
üîé Consulta por CPF: Busca de dados de usu√°rios (pessoal ou profissional)
‚úèÔ∏è Atualiza√ß√£o de Dados: Altera√ß√£o de dados cadastrais
üóëÔ∏è Exclus√£o Segura: Confirma√ß√£o via e-mail antes da remo√ß√£o

Gerenciamento de Exames

üìÑ Cria√ß√£o de Exames: Upload de arquivos (PDF/JPEG) com metadados (tipo, t√≠tulo, descri√ß√£o, data)
üìã Listagem de Exames: Consulta de exames por usu√°rio
üîç Visualiza√ß√£o de Exame: Detalhes de um exame espec√≠fico
‚úèÔ∏è Atualiza√ß√£o de Exame: Edi√ß√£o de metadados do exame
üóëÔ∏è Exclus√£o de Exame: Remo√ß√£o segura de exames
ü§ù Compartilhamento: Compartilhamento de exames com profissionais mediante consentimento
‚¨áÔ∏è Download: Download de arquivos de exames

üõ†Ô∏è Tecnologias

Java 17 (OpenJDK)
Spring Boot 3.4.4
MongoDB 6.0
MapStruct 1.5.5.Final
Lombok 1.18.34
Caffeine Cache 3.1.8
Spring Validation (para valida√ß√£o de dados e arquivos)
Maven 3.9.9
Docker & Docker Compose

üìò Endpoints Principais
üë§ Usu√°rio Pessoal



A√ß√£o
M√©todo
Endpoint
Descri√ß√£o



Cadastro
POST
/api/user/register?type=personal
Registra usu√°rio pessoal


Login
POST
/api/user/login?type=personal
Inicia login


Verifica√ß√£o 2FA
POST
/api/user/verify-2fa?type=personal
Confirma login com c√≥digo 2FA


Consulta
GET
/api/user?type=personal
Busca dados por CPF


Atualiza√ß√£o
PUT
/api/user?type=personal
Atualiza dados


Iniciar Exclus√£o
DELETE
/api/user?type=personal
Inicia exclus√£o


Confirmar Exclus√£o
POST
/api/user/confirm-delete?type=personal
Confirma exclus√£o com c√≥digo


ü©∫ Profissional



A√ß√£o
M√©todo
Endpoint
Descri√ß√£o



Cadastro
POST
/api/user/register?type=professional
Registra profissional


Login
POST
/api/user/login?type=professional
Inicia login


Verifica√ß√£o 2FA
POST
/api/user/verify-2fa?type=professional
Confirma login com c√≥digo 2FA


Consulta
GET
/api/user?type=professional
Busca dados por CPF


Atualiza√ß√£o
PUT
/api/user?type=professional
Atualiza dados


Iniciar Exclus√£o
DELETE
/api/user?type=professional
Inicia exclus√£o


Confirmar Exclus√£o
POST
/api/user/confirm-delete?type=professional
Confirma exclus√£o com c√≥digo


üìÑ Exames



A√ß√£o
M√©todo
Endpoint
Descri√ß√£o



Criar Exame
POST
/api/user/{userCPF}/exam
Cria um novo exame com arquivo


Listar Exames
GET
/api/user/{userCPF}/exams
Lista exames do usu√°rio


Visualizar Exame
GET
/api/user/{userCPF}/exam/{examId}
Obt√©m detalhes de um exame


Atualizar Exame
PUT
/api/user/{userCPF}/exam/{examId}
Atualiza metadados do exame


Deletar Exame
DELETE
/api/user/{userCPF}/exam/{examId}
Remove um exame


Compartilhar Exame
POST
/api/user/share/{examId}
Compartilha exame com profissional


Listar Exames Compartilhados
GET
/api/user/professional/{professionalId}
Lista exames compartilhados com profissional


Download Exame
GET
/api/user/download/{examId}
Faz download do arquivo do exame


‚ñ∂Ô∏è Como Executar
‚úÖ Pr√©-requisitos

Docker e Docker Compose
Git
(Opcional) Java 17, Maven 3.9.9, MongoDB 6.0
Cliente HTTP (Postman, Insomnia...)

üê≥ Com Docker
git clone https://github.com/vicabats/iData.git
cd iData
docker compose pull
docker compose up -d

Acesse:

Backend: http://localhost:8080/actuator/health
MongoDB: localhost:27017

Parar:
docker compose down

üíª Execu√ß√£o Local (Sem Docker)

Suba o MongoDB localmente:mongod


Compile e execute a aplica√ß√£o:cd backend/idata
mvn clean install
mvn spring-boot:run -Dspring-boot.run.profiles=dev


Acesse: http://localhost:8080

üì¨ Exemplos de Requisi√ß√µes
Cadastro de Profissional
POST http://localhost:8080/api/user/register?type=professional
{
  "name": "Juliana Haddad",
  "cpf": "45634572858",
  "email": "juliana.haddad@gmail.com",
  "password": "Juliana12345&",
  "phone": "11912345678",
  "birthdate": "15/09/1987",
  "professionalLicense": "CRM 123456 SP",
  "address": {
    "street": "Rua Exemplo",
    "number": "123",
    "complement": "Apto 45",
    "neighborhood": "Centro",
    "zipCode": "12345-678",
    "city": "S√£o Paulo",
    "state": "SP"
  }
}

Resposta: "Profissional registrado com sucesso: 45634572858"
Login com 2FA (Pessoal)
POST http://localhost:8080/api/user/login?type=personal
{
  "cpf": "42089736856",
  "password": "Jose12345&"
}

Resposta: "C√≥digo de verifica√ß√£o enviado para josenascimentoprofessional@gmail.com"
Verifica√ß√£o:POST http://localhost:8080/api/user/verify-2fa?type=personal
{
  "email": "josenascimentoprofessional@gmail.com",
  "code": "<c√≥digo recebido por e-mail>"
}

Resposta: "Login realizado com sucesso"
Criar Exame
POST http://localhost:8080/api/user/42089736856/exam

Headers: Authorization: Bearer <token>, Content-Type: multipart/form-data
Body (form-data):
data (Text):{
  "type": "Imaging",
  "title": "Resson√¢ncia do joelho direito",
  "description": "Resson√¢ncia para avaliar poss√≠vel tendinite",
  "date": "2025-05-24T00:00:00.000Z",
  "file": "exame.pdf"
}


file (File): Upload de exame.pdf


Resposta:{
  "exams": {
    "id": "11232179381",
    "type": "Imaging",
    "title": "Resson√¢ncia do joelho direito",
    "description": "Resson√¢ncia para avaliar poss√≠vel tendinite",
    "date": "2025-05-24T00:00:00.000Z",
    "file": "exame.pdf"
  }
}



Listar Exames
GET http://localhost:8080/api/user/42089736856/exams

Headers: Authorization: Bearer <token>
Resposta:{
  "exams": [
    {
      "id": "11232179381",
      "type": "Imaging",
      "title": "Resson√¢ncia do joelho direito",
      "description": "Resson√¢ncia para avaliar poss√≠vel tendinite",
      "date": "2025-05-24T00:00:00.000Z",
      "file": "exame.pdf"
    }
  ]
}



Compartilhar Exame
POST http://localhost:8080/api/user/share/11232179381

Headers: Authorization: Bearer <token>, Content-Type: application/x-www-form-urlencoded
Body (x-www-form-urlencoded):
userId: 42089736856
professionalId: prof456
consentGiven: true


Resposta:{
  "exams": {
    "id": "11232179381",
    "type": "Imaging",
    "title": "Resson√¢ncia do joelho direito",
    "description": "Resson√¢ncia para avaliar poss√≠vel tendinite",
    "date": "2025-05-24T00:00:00.000Z",
    "file": "exame.pdf"
  }
}



üîó Links

Reposit√≥rio: https://github.com/vicabats/iData
Docker Hub: julianahaddad/idata-backend:v4
CI/CD: GitHub Actions

üßØ Solu√ß√£o de Problemas
Backend DOWN
Verifique os logs:
docker logs idata-1-new-backend-1

Verifique a conex√£o com o MongoDB:
docker exec -it idata-1-new-backend-1 bash
ping mongodb
telnet mongodb 27017
exit

Porta 8080 ocupada
netstat -aon | findstr :8080
taskkill /PID <PID> /F

Limpar ambiente
docker compose down
docker rm -f $(docker ps -aq)
docker image rm julianahaddad/idata-backend:v4
docker image prune -f

üë©
