iData Backend

üîê Seguran√ßa em primeiro lugar com autentica√ß√£o 2FA

O iData Backend √© uma API RESTful desenvolvida com Spring Boot para gerenciamento seguro de dados cl√≠nicos e pessoais. Conta com suporte a autentica√ß√£o em dois fatores (2FA), utiliza Java 17, MongoDB como banco NoSQL, MapStruct para mapeamento de DTOs e √© containerizada com Docker para execu√ß√£o consistente e port√°til.

‚öôÔ∏è Funcionalidades

Cadastro de Usu√°rios:

üë§ Pessoal: Dados pessoais e endere√ßo

ü©∫ Profissional: Inclui valida√ß√£o de licen√ßa profissional (ex.: CRM)

üîê Autentica√ß√£o 2FA: C√≥digo enviado por e-mail para login seguro

üîé Consulta por CPF: Busca de dados de usu√°rios (pessoal ou profissional)

‚úèÔ∏è Atualiza√ß√£o de Dados: Altera√ß√£o de dados cadastrais

üóëÔ∏è Exclus√£o Segura: Confirma√ß√£o via e-mail antes da remo√ß√£o

üõ†Ô∏è Tecnologias

Java 17 (OpenJDK)

Spring Boot 3.4.4

MongoDB 6.0

MapStruct 1.5.5.Final

Lombok 1.18.32

Caffeine Cache 3.1.8

Maven 3.9.9

Docker & Docker Compose

üìò Endpoints Principais

üë§ Usu√°rio Pessoal

A√ß√£o

M√©todo

Endpoint

Descri√ß√£o

Cadastro

POST

/api/user/register?type=personal

Registra usu√°rio pessoal

Login

POST

/api/user/login?type=personal

Inicia login

Verifica√ß√£o 2FA

POST

/api/user/verify-2fa?type=personal

Confirma login com c√≥digo 2FA

Consulta

GET

/api/user?type=personal

Busca dados por CPF

Atualiza√ß√£o

PUT

/api/user?type=personal

Atualiza dados

Iniciar Exclus√£o

DELETE

/api/user?type=personal

Inicia exclus√£o

Confirmar Exclus√£o

POST

/api/user/confirm-delete?type=personal

Confirma exclus√£o com c√≥digo

ü©∫ Profissional

A√ß√£o

M√©todo

Endpoint

Descri√ß√£o

Cadastro

POST

/api/user/register?type=professional

Registra profissional

Login

POST

/api/user/login?type=professional

Inicia login

Verifica√ß√£o 2FA

POST

/api/user/verify-2fa?type=professional

Confirma login com c√≥digo 2FA

Consulta

GET

/api/user?type=professional

Busca dados por CPF

Atualiza√ß√£o

PUT

/api/user?type=professional

Atualiza dados

Iniciar Exclus√£o

DELETE

/api/user?type=professional

Inicia exclus√£o

Confirmar Exclus√£o

POST

/api/user/confirm-delete?type=professional

Confirma exclus√£o com c√≥digo

‚ñ∂Ô∏è Como Executar

‚úÖ Pr√©-requisitos

Docker e Docker Compose

Git

(Opcional) Java 17, Maven 3.9.9, MongoDB 6.0

Cliente HTTP (Postman, Insomnia...)

üê≥ Com Docker

git clone https://github.com/vicabats/iData.git
cd iData
docker compose pull
docker compose up -d

Acesse:

Backend: http://localhost:8080/actuator/health

MongoDB: localhost:27017

Parar:

docker compose down

üíª Execu√ß√£o Local (Sem Docker)

Suba o MongoDB localmente:

mongod

Compile e execute a aplica√ß√£o:

cd backend/idata
mvn clean install
mvn spring-boot:run -Dspring-boot.run.profiles=dev

Acesse: http://localhost:8080

üì¨ Exemplos de Requisi√ß√µes

Cadastro de Profissional

POST http://localhost:8080/api/user/register?type=professional
Content-Type: application/json

{
  "name": "Juliana Haddad",
  "cpf": "45634572858",
  "email": "juliana.haddad@gmail.com",
  "password": "Juliana12345&",
  "phone": "11912345678",
  "birthdate": "15/09/1987",
  "professionalLicense": "CRM 123456 SP",
  "address": {
    "street": "Rua Exemplo",
    "number": "123",
    "complement": "Apto 45",
    "neighborhood": "Centro",
    "zipCode": "12345-678",
    "city": "S√£o Paulo",
    "state": "SP"
  }
}

Resposta:

"Profissional registrado com sucesso: 45634572858"

Login com 2FA (Pessoal)

POST http://localhost:8080/api/user/login?type=personal
Content-Type: application/json

{
  "cpf": "42089736856",
  "password": "Jose12345&"
}

Resposta:

"C√≥digo de verifica√ß√£o enviado para jose.nascimento@gmail.com"

Verifica√ß√£o:

POST http://localhost:8080/api/user/verify-2fa?type=personal
Content-Type: application/json

{
  "email": "jose.nascimento@gmail.com",
  "code": "<c√≥digo recebido por e-mail>"
}

Resposta:

"Login realizado com sucesso"

üîó Links

Reposit√≥rio: https://github.com/vicabats/iData

Docker Hub: julianahaddad/idata-backend:v4

CI/CD: GitHub Actions

üßØ Solu√ß√£o de Problemas

Backend DOWN

Verifique os logs:

docker logs idata-1-new-backend-1

Verifique a conex√£o com o MongoDB:

docker exec -it idata-1-new-backend-1 bash
ping mongodb
telnet mongodb 27017
exit

Porta 8080 ocupada

netstat -aon | findstr :8080
taskkill /PID <PID> /F

Limpar ambiente

docker compose down
docker rm -f $(docker ps -aq)
docker image rm julianahaddad/idata-backend:v4
docker image prune -f

üë©‚Äçüíª Equipe

Juliana Haddad

Pedro Henrique Moreira

Vit√≥ria Gomes Batistoti de Abreu
