name: Build and Push Docker Images

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      # Checkout do código do repositório
      - name: Checkout code
        uses: actions/checkout@v4

      # Configurar QEMU para suportar múltiplas arquiteturas (opcional, mas boa prática)
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Configurar Docker Buildx para builds mais eficientes
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login no Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Extrair metadados (tags) para as imagens
      - name: Extract metadata for frontend
        id: meta-frontend
        uses: docker/metadata-action@v5
        with:
          images: julianahaddad/idata-frontend
          tags: |
            type=raw,value=v4
            type=sha,prefix=sha-

      - name: Extract metadata for backend
        id: meta-backend
        uses: docker/metadata-action@v5
        with:
          images: julianahaddad/idata-backend
          tags: |
            type=raw,value=v4
            type=sha,prefix=sha-

      # Build e push da imagem frontend
      - name: Build and push frontend image
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ steps.meta-frontend.outputs.tags }}
          labels: ${{ steps.meta-frontend.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Build e push da imagem backend
      - name: Build and push backend image
        uses: docker/build-push-action@v6
        with:
          context: ./backend/idata
          file: ./backend/idata/Dockerfile
          push: true
          tags: ${{ steps.meta-backend.outputs.tags }}
          labels: ${{ steps.meta-backend.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
